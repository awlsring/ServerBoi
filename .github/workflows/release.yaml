name: Publish containers to GitHub Container Registry

on:
  push:
    tags: ['v*']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: serverboi

jobs:
  ghcr-api-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: actions/setup-node@v2
        name: Setup Node
        with:
          node-version: 18

      - run: yarn install
        name: Install dependencies

      - run: yarn bootstrap
        name: Bootstrap

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image (Try 1)
        id: build1
        continue-on-error: true 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/api/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image (Try 2)
        continue-on-error: true
        id: build2
        if: steps.build1.outcome=='failure' 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/api/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Build and push Docker image (Try 3)
        continue-on-error: true 
        id: build3
        if: steps.build2.outcome=='failure' 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/api/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  ghcr-discord-bot-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: actions/setup-node@v2
        name: Setup Node
        with:
          node-version: 18

      - run: yarn install
        name: Install dependencies

      - run: yarn bootstrap
        name: Bootstrap

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-discord-bot
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image (Try 1)
        id: build1
        continue-on-error: true 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/discord-bot/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image (Try 2)
        continue-on-error: true
        id: build2
        if: steps.build1.outcome=='failure' 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/discord-bot/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Build and push Docker image (Try 3)
        continue-on-error: true 
        id: build3
        if: steps.build2.outcome=='failure' 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/discord-bot/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  ghcr-embed-refresher-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: actions/setup-node@v2
        name: Setup Node
        with:
          node-version: 18

      - run: yarn install
        name: Install dependencies

      - run: yarn bootstrap
        name: Bootstrap

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-embed-refresher
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image (Try 1)
        id: build1
        continue-on-error: true 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/embed-refresher/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image (Try 2)
        continue-on-error: true
        id: build2
        if: steps.build1.outcome=='failure' 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/embed-refresher/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Build and push Docker image (Try 3)
        continue-on-error: true 
        id: build3
        if: steps.build2.outcome=='failure' 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/embed-refresher/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  ghcr-status-monitor-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: actions/setup-node@v2
        name: Setup Node
        with:
          node-version: 18

      - run: yarn install
        name: Install dependencies

      - run: yarn bootstrap
        name: Bootstrap

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-status-monitor
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image (Try 1)
        id: build1
        continue-on-error: true 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/status-monitor/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image (Try 2)
        continue-on-error: true
        id: build2
        if: steps.build1.outcome=='failure' 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/status-monitor/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Build and push Docker image (Try 3)
        continue-on-error: true 
        id: build3
        if: steps.build2.outcome=='failure' 
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/status-monitor/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}